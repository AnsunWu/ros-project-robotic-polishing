viki@viki-Firebat-F640:~/catkin_ws/src/Robotic-polishing$ ../cpplint.py --extensions=h,hpp,cpp $( find . -name *.h -or -name *.hpp -or -name *.cpp | grep -vE -e "^./build/" -e "^./vendor/" )
\./src/kuka_control/kukaControl.cpp:43:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/kuka_control/kukaControl.cpp:45:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/kuka_control/kukaControl.cpp:53:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/kuka_control/kukaControl.cpp:78:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/kuka_control/kukaControl.cpp:86:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/kuka_control/kukaControl.cpp:95:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/kuka_control/kukaControl.cpp:121:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
Done processing ./src/kuka_control/kukaControl.cpp
./src/talker.cpp:77:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/talker.cpp:78:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/talker.cpp:87:  Missing username in TODO; it should look like "// TODO(my_username): Stuff."  [readability/todo] [2]
./src/talker.cpp:102:  Is this a non-const reference? If so, make const or use a pointer: robotic_polishing::Trajectory::Request &req  [runtime/references] [2]
./src/talker.cpp:103:  Is this a non-const reference? If so, make const or use a pointer: robotic_polishing::Trajectory::Response &res  [runtime/references] [2]
./src/talker.cpp:104:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/talker.cpp:116:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/talker.cpp:254:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
Done processing ./src/talker.cpp
./src/jointControlKuka.cpp:53:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:88:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/jointControlKuka.cpp:93:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:94:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:95:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:96:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:97:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:99:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:282:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:286:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:345:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/jointControlKuka.cpp:347:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/jointControlKuka.cpp:505:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
Done processing ./src/jointControlKuka.cpp
Done processing ./src/pcl_midterm/pclIo.cpp
./src/pcl_midterm/findNearestPoint.cpp:46:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
Done processing ./src/pcl_midterm/findNearestPoint.cpp
Done processing ./src/pcl_midterm/pclVoxel.cpp
./src/pcl_midterm/s_hull_pro.cpp:30:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
./src/pcl_midterm/s_hull_pro.cpp:50:  Is this a non-const reference? If so, make const or use a pointer: float &r  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:50:  Is this a non-const reference? If so, make const or use a pointer: float &c  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:50:  Is this a non-const reference? If so, make const or use a pointer: float &ro2  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:94:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:108:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:174:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:192:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &ts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:214:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:214:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &triads  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:448:  Tab found; better to use spaces  [whitespace/tab] [1]
./src/pcl_midterm/s_hull_pro.cpp:478:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:490:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/pcl_midterm/s_hull_pro.cpp:515:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:593:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:602:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:624:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:629:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/pcl_midterm/s_hull_pro.cpp:644:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:648:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/pcl_midterm/s_hull_pro.cpp:661:  Is this a non-const reference? If so, make const or use a pointer: float &r  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:661:  Is this a non-const reference? If so, make const or use a pointer: float &c  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:661:  Is this a non-const reference? If so, make const or use a pointer: float &ro2  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:701:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:701:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &outx  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:702:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:746:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:746:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &triads  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:747:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &slump  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:748:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &ids  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:749:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:756:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:763:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:819:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:823:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:873:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:926:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:930:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:975:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:977:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:982:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1035:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1039:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1083:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:1087:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:1105:  Is this a non-const reference? If so, make const or use a pointer: float &Ax  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1105:  Is this a non-const reference? If so, make const or use a pointer: float &Ay  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1105:  Is this a non-const reference? If so, make const or use a pointer: float &Bx  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1105:  Is this a non-const reference? If so, make const or use a pointer: float &By  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1105:  Is this a non-const reference? If so, make const or use a pointer: float &Cx  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1106:  Is this a non-const reference? If so, make const or use a pointer: float &Cy  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1106:  Is this a non-const reference? If so, make const or use a pointer: float &Dx  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1106:  Is this a non-const reference? If so, make const or use a pointer: float &Dy  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1107:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1128:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:1133:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1133:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &triads  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1134:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &slump  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1134:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &ids  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1135:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &ids2  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1136:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1154:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1211:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1256:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:1262:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1318:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1363:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:1369:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1425:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1469:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:1505:  Is this a non-const reference? If so, make const or use a pointer: Shx &pt0  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1505:  Is this a non-const reference? If so, make const or use a pointer: Shx &pt1  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1505:  Is this a non-const reference? If so, make const or use a pointer: Shx &pt2  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1506:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1531:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1531:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &outx  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1532:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts2  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1533:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1554:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/pcl_midterm/s_hull_pro.cpp:1570:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1570:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &triads  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1571:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &slump  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1572:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &ids  [runtime/references] [2]
./src/pcl_midterm/s_hull_pro.cpp:1573:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1580:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1587:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1643:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1692:  Tab found; better to use spaces  [whitespace/tab] [1]
./src/pcl_midterm/s_hull_pro.cpp:1697:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1750:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1800:  Tab found; better to use spaces  [whitespace/tab] [1]
./src/pcl_midterm/s_hull_pro.cpp:1801:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./src/pcl_midterm/s_hull_pro.cpp:1806:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1859:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/s_hull_pro.cpp:1911:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
Done processing ./src/pcl_midterm/s_hull_pro.cpp
Done processing ./src/pcl_midterm/pclMlsSmoothing.cpp
Done processing ./src/pcl_midterm/pclStatisticalOutlierRemoval.cpp
./src/pcl_midterm/dijkstraPQ.cpp:45:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./src/pcl_midterm/dijkstraPQ.cpp:134:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./src/pcl_midterm/dijkstraPQ.cpp:137:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
Done processing ./src/pcl_midterm/dijkstraPQ.cpp
Done processing ./src/pcl_midterm/pclCloudViewer.cpp
Done processing ./src/pcl_midterm/delaunay3.cpp
Done processing ./src/pcl_midterm/pclPassThrough.cpp
./src/pcl_midterm/pclFastTriangular.cpp:93:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
Done processing ./src/pcl_midterm/pclFastTriangular.cpp
Done processing ./test/pclFastTriangularTest.cpp
Done processing ./test/pclMlsSmoothingTest.cpp
Done processing ./test/pclIoTest.cpp
Done processing ./test/pclPassThroughTest.cpp
./test/pclStatisticalOutlierRemovalTest.cpp:72:  Consider using rand_r(...) instead of rand(...) for improved thread safety.  [runtime/threadsafe_fn] [2]
./test/pclStatisticalOutlierRemovalTest.cpp:73:  Consider using rand_r(...) instead of rand(...) for improved thread safety.  [runtime/threadsafe_fn] [2]
./test/pclStatisticalOutlierRemovalTest.cpp:74:  Consider using rand_r(...) instead of rand(...) for improved thread safety.  [runtime/threadsafe_fn] [2]
Done processing ./test/pclStatisticalOutlierRemovalTest.cpp
Done processing ./test/pclVoxelTest.cpp
Done processing ./test/main.cpp
./include/s_hull_pro.h:105:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./include/s_hull_pro.h:160:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./include/s_hull_pro.h:207:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./include/s_hull_pro.h:220:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./include/s_hull_pro.h:220:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &triads  [runtime/references] [2]
./include/s_hull_pro.h:222:  Is this a non-const reference? If so, make const or use a pointer: float &r  [runtime/references] [2]
./include/s_hull_pro.h:222:  Is this a non-const reference? If so, make const or use a pointer: float &c  [runtime/references] [2]
./include/s_hull_pro.h:222:  Is this a non-const reference? If so, make const or use a pointer: float &ro2  [runtime/references] [2]
./include/s_hull_pro.h:224:  Is this a non-const reference? If so, make const or use a pointer: float &r  [runtime/references] [2]
./include/s_hull_pro.h:224:  Is this a non-const reference? If so, make const or use a pointer: float &c  [runtime/references] [2]
./include/s_hull_pro.h:224:  Is this a non-const reference? If so, make const or use a pointer: float &ro2  [runtime/references] [2]
./include/s_hull_pro.h:225:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./include/s_hull_pro.h:226:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &ts  [runtime/references] [2]
./include/s_hull_pro.h:227:  Is this a non-const reference? If so, make const or use a pointer: float &Ax  [runtime/references] [2]
./include/s_hull_pro.h:227:  Is this a non-const reference? If so, make const or use a pointer: float &Ay  [runtime/references] [2]
./include/s_hull_pro.h:227:  Is this a non-const reference? If so, make const or use a pointer: float &Bx  [runtime/references] [2]
./include/s_hull_pro.h:227:  Is this a non-const reference? If so, make const or use a pointer: float &By  [runtime/references] [2]
./include/s_hull_pro.h:227:  Is this a non-const reference? If so, make const or use a pointer: float &Cx  [runtime/references] [2]
./include/s_hull_pro.h:228:  Is this a non-const reference? If so, make const or use a pointer: float &Cy  [runtime/references] [2]
./include/s_hull_pro.h:228:  Is this a non-const reference? If so, make const or use a pointer: float &Dx  [runtime/references] [2]
./include/s_hull_pro.h:228:  Is this a non-const reference? If so, make const or use a pointer: float &Dy  [runtime/references] [2]
./include/s_hull_pro.h:229:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./include/s_hull_pro.h:229:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &triads  [runtime/references] [2]
./include/s_hull_pro.h:230:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &slump  [runtime/references] [2]
./include/s_hull_pro.h:231:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &ids  [runtime/references] [2]
./include/s_hull_pro.h:232:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./include/s_hull_pro.h:232:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &triads  [runtime/references] [2]
./include/s_hull_pro.h:233:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &slump  [runtime/references] [2]
./include/s_hull_pro.h:233:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &ids  [runtime/references] [2]
./include/s_hull_pro.h:234:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &ids2  [runtime/references] [2]
./include/s_hull_pro.h:236:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./include/s_hull_pro.h:237:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./include/s_hull_pro.h:237:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &outx  [runtime/references] [2]
./include/s_hull_pro.h:238:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./include/s_hull_pro.h:238:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &outx  [runtime/references] [2]
./include/s_hull_pro.h:239:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts2  [runtime/references] [2]
./include/s_hull_pro.h:240:  Is this a non-const reference? If so, make const or use a pointer: Shx &pt0  [runtime/references] [2]
./include/s_hull_pro.h:240:  Is this a non-const reference? If so, make const or use a pointer: Shx &pt1  [runtime/references] [2]
./include/s_hull_pro.h:240:  Is this a non-const reference? If so, make const or use a pointer: Shx &pt2  [runtime/references] [2]
./include/s_hull_pro.h:242:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx> &pts  [runtime/references] [2]
./include/s_hull_pro.h:242:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad> &triads  [runtime/references] [2]
./include/s_hull_pro.h:243:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &slump  [runtime/references] [2]
./include/s_hull_pro.h:244:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &ids  [runtime/references] [2]
Done processing ./include/s_hull_pro.h
./include/pclPassThrough.h:68:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudIn  [runtime/references] [2]
./include/pclPassThrough.h:72:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudOut  [runtime/references] [2]
./include/pclPassThrough.h:76:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudOut  [runtime/references] [2]
Done processing ./include/pclPassThrough.h
./include/pclIo.h:53:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudOut  [runtime/references] [2]
Done processing ./include/pclIo.h
./include/delaunay3.h:47:  "public:" should be preceded by a blank line  [whitespace/blank_line] [3]
./include/delaunay3.h:52:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointNormal>& cloudIn  [runtime/references] [2]
./include/delaunay3.h:61:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad>& triads  [runtime/references] [2]
./include/delaunay3.h:65:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Shx>& ptsOut  [runtime/references] [2]
Done processing ./include/delaunay3.h
./include/pclStatisticalOutlierRemoval.h:61:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudIn  [runtime/references] [2]
./include/pclStatisticalOutlierRemoval.h:65:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudOut  [runtime/references] [2]
./include/pclStatisticalOutlierRemoval.h:69:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudOut  [runtime/references] [2]
Done processing ./include/pclStatisticalOutlierRemoval.h
./include/pclMlsSmoothing.h:69:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudOut  [runtime/references] [2]
./include/pclMlsSmoothing.h:73:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointNormal>& cloudOut  [runtime/references] [2]
Done processing ./include/pclMlsSmoothing.h
./include/pclFastTriangular.h:65:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointNormal>& cloudIn  [runtime/references] [2]
./include/pclFastTriangular.h:69:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointNormal>& cloudOut  [runtime/references] [2]
./include/pclFastTriangular.h:73:  Is this a non-const reference? If so, make const or use a pointer: pcl::PolygonMesh& triangles  [runtime/references] [2]
Done processing ./include/pclFastTriangular.h
./include/pclVoxel.h:71:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudIn  [runtime/references] [2]
./include/pclVoxel.h:75:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudOut  [runtime/references] [2]
./include/pclVoxel.h:79:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointXYZ>& cloudOut  [runtime/references] [2]
Done processing ./include/pclVoxel.h
./include/findNearestPoint.h:40:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./include/findNearestPoint.h:60:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointNormal>& cloudIn  [runtime/references] [2]
./include/findNearestPoint.h:67:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int>& nearIndices  [runtime/references] [2]
Done processing ./include/findNearestPoint.h
Done processing ./include/pclCloudViewer.h
./include/kukaControl.h:48:  "public:" should be preceded by a blank line  [whitespace/blank_line] [3]
./include/kukaControl.h:54:  Is this a non-const reference? If so, make const or use a pointer: KDL::JntArray & jointPositions  [runtime/references] [2]
./include/kukaControl.h:60:  Is this a non-const reference? If so, make const or use a pointer: trajectory_msgs::JointTrajectoryPoint & pt  [runtime/references] [2]
./include/kukaControl.h:66:  Is this a non-const reference? If so, make const or use a pointer: trajectory_msgs::JointTrajectory & cmd  [runtime/references] [2]
./include/kukaControl.h:72:  Is this a non-const reference? If so, make const or use a pointer: trajectory_msgs::JointTrajectoryPoint & point  [runtime/references] [2]
./include/kukaControl.h:73:  Is this a non-const reference? If so, make const or use a pointer: KDL::JntArray & jointPositions  [runtime/references] [2]
Done processing ./include/kukaControl.h
./include/dijkstraPQ.h:84:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int>& same3indices  [runtime/references] [2]
./include/dijkstraPQ.h:93:  Is this a non-const reference? If so, make const or use a pointer: std::vector<Triad>& triadsIn  [runtime/references] [2]
./include/dijkstraPQ.h:104:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int>& pathNode  [runtime/references] [2]
./include/dijkstraPQ.h:108:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointCloud<pcl::PointNormal>& cloudIn  [runtime/references] [2]
./include/dijkstraPQ.h:115:  Is this a non-const reference? If so, make const or use a pointer: std::vector<position>& pathPos  [runtime/references] [2]
Done processing ./include/dijkstraPQ.h
Total errors found: 207

